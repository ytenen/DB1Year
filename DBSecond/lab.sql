/gset


/*1)Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ДАТА.
Фильтры (AND):
a) Н_ЛЮДИ.ОТЧЕСТВО > Александрович.
b) Н_СЕССИЯ.ЧЛВК_ИД = 106059.
c) Н_СЕССИЯ.ЧЛВК_ИД > 126631.
Вид соединения: RIGHT JOIN.
*/

SELECT
Н_ЛЮДИ.ОТЧЕСТВО, 
Н_СЕССИЯ.ДАТА
FROM 
Н_ЛЮДИ
RIGHT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД=Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ОТЧЕСТВО > 'Александрович'
AND Н_ЛЮДИ.ИД = 106059
AND Н_ЛЮДИ.ИД > 100000;



/*2)Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.ДАТА.
Фильтры (AND):
a) Н_ЛЮДИ.ОТЧЕСТВО < Сергеевич.
b) Н_ВЕДОМОСТИ.ДАТА < 2010-06-18.
Вид соединения: RIGHT JOIN.
*/

SELECT 
Н_ЛЮДИ.ИД AS ЛЮДИ_ИД,
Н_ВЕДОМОСТИ.ИД AS ВЕДОМОСТИ_ИД,
Н_СЕССИЯ.ДАТА
FROM 
Н_ЛЮДИ RIGHT JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
RIGHT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE
Н_ЛЮДИ.ОТЧЕСТВО < 'Сергеевич'
AND
Н_ВЕДОМОСТИ.ДАТА < '2010-06-18'
LIMIT 100;



/*3)Составить запрос, который ответит на вопрос,
есть ли среди студентов вечерней формы обучения те, кто старше 25 лет.
*/

SELECT EXISTS(SELECT Н_УЧЕНИКИ.ЧЛВК_ИД
FROM Н_УЧЕНИКИ
INNER JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
INNER JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE
Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ < '1999-01-01'
AND
Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очно-заочная(вечерняя)'
);

/*4)Выдать различные фамилии студентов и число людей с каждой из этих фамилий,
ограничив список фамилиями, встречающимися более 50 раз на очной форме обучения.
*/

SELECT Н_ЛЮДИ.ФАМИЛИЯ, COUNT(Н_ЛЮДИ.ФАМИЛИЯ) as COUNTSUR
FROM Н_УЧЕНИКИ
INNER JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
INNER JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE
Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
GROUP BY Н_ЛЮДИ.ФАМИЛИЯ
HAVING COUNT(Н_ЛЮДИ.ФАМИЛИЯ) > 50
;




/*5)Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка),
у которых средняя оценка не больше максимальной оценк(е|и) в группе 3100.
*/

SELECT Н_УЧЕНИКИ.ЧЛВК_ИД, CONCAT(Н_ЛЮДИ.ФАМИЛИЯ, ' ', Н_ЛЮДИ.ИМЯ, ' ', Н_ЛЮДИ.ОТЧЕСТВО) AS ФИО,
AVG(CASE
WHEN ОЦЕНКА = 'зачет' THEN NULL
WHEN ОЦЕНКА = 'незач' THEN NULL
WHEN ОЦЕНКА = 'осв' THEN NULL
WHEN ОЦЕНКА = 'неявка' THEN NULL
ELSE CAST(ОЦЕНКА AS INT)
END) AS Ср_оценка
FROM Н_УЧЕНИКИ
JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
JOIN Н_ВЕДОМОСТИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '4100'
AND CAST(CASE
WHEN ОЦЕНКА = 'зачет' THEN NULL
WHEN ОЦЕНКА = 'незач' THEN NULL
WHEN ОЦЕНКА = 'осв' THEN NULL
WHEN ОЦЕНКА = 'неявка' THEN NULL
ELSE CAST(ОЦЕНКА AS INT)
END AS INT) <= 
(SELECT MAX(CASE
WHEN ОЦЕНКА = 'зачет' THEN NULL
WHEN ОЦЕНКА = 'незач' THEN NULL
WHEN ОЦЕНКА = 'осв' THEN NULL
WHEN ОЦЕНКА = 'неявка' THEN NULL
ELSE CAST(ОЦЕНКА AS INT)
END)
FROM Н_ВЕДОМОСТИ
WHERE ЧЛВК_ИД IN (SELECT ЧЛВК_ИД
FROM Н_УЧЕНИКИ
WHERE ГРУППА = '3100'))
GROUP BY Н_УЧЕНИКИ.ЧЛВК_ИД, CONCAT(Н_ЛЮДИ.ФАМИЛИЯ, ' ', Н_ЛЮДИ.ИМЯ, ' ', Н_ЛЮДИ.ОТЧЕСТВО);



/*6)Получить список студентов, зачисленных до первого сентября 2012 года на первый курс заочной формы обучения. В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер и состояние пункта приказа;
Для реализации использовать подзапрос с IN.
*/


SELECT Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ИД, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО, Н_УЧЕНИКИ.ИД, Н_УЧЕНИКИ.СОСТОЯНИЕ, Н_УЧЕНИКИ.КОНЕЦ_ПО_ПРИКАЗУ
FROM
Н_УЧЕНИКИ
INNER JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
INNER JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE
Н_УЧЕНИКИ.НАЧАЛО < '2012-09-01 00:00:00'
AND
Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ IN ('Заочная');




/*7)Вывести список студентов,
имеющих одинаковые фамилии, но не совпадающие даты рождения.
*/

SELECT DISTINCT a.ФАМИЛИЯ, a.ДАТА_РОЖДЕНИЯ, b.ФАМИЛИЯ, b.ДАТА_РОЖДЕНИЯ
FROM Н_ЛЮДИ a, Н_ЛЮДИ b
WHERE a.ФАМИЛИЯ = b.ФАМИЛИЯ
AND a.ДАТА_РОЖДЕНИЯ <> b.ДАТА_РОЖДЕНИЯ
AND a.ФАМИЛИЯ IS NOT NULL
AND b.ФАМИЛИЯ IS NOT NULL
LIMIT 300;